from torch import nn
from model.blocks import pixelshuffle_block
from model.blocks import conv_layer
from model.blocks import SB as B
from model.blocks import blueprint_conv_layer


class ULN(nn.Module):
    def __init__(self, upscale_factor=2):
        super().__init__()
        self.c1 = blueprint_conv_layer(3, 48, 3)
        self.p1 = B(48)
        self.p2 = B(48)
        self.p3 = B(48)
        self.p4 = B(48)
        self.p5 = B(48)
        self.p6 = B(48)
        self.p7 = B(48)
        self.p8 = B(48)
        self.p9 = B(48)
        self.p10 = B(48)
        self.p11 = B(48)
        self.p12 = B(48)
        self.p13 = B(48)
        self.p14 = B(48)
        self.p15 = B(48)
        self.p16 = B(48)
        self.p17 = B(48)
        self.p18 = B(48)
        self.p19 = B(48)
        self.p20 = B(48)
        self.p21 = B(48)
        self.p22 = B(48)
        self.p23 = B(48)
        self.p24 = B(48)
        self.p25 = B(48)
        self.p26 = B(48)
        self.p27 = B(48)
        self.p28 = B(48)
        self.p29 = B(48)
        self.p30 = B(48)
        self.p31 = B(48)
        self.p32 = B(48)
        self.c2 = blueprint_conv_layer(48, 48, 3)
        self.upsampler = pixelshuffle_block(48, 3, upscale_factor)

    def forward(self, x):
        out_fea = self.c1(x)
        out_p1 = self.p1(out_fea)
        out_p2 = self.p2(out_p1)
        out_p3 = self.p3(out_p2)
        out_p4 = self.p4(out_p3)
        out_p5 = self.p5(out_p4)
        out_p6 = self.p6(out_p5)
        out_p7 = self.p7(out_p6)
        out_p8 = self.p8(out_p7)
        out_p9 = self.p9(out_p8)
        out_p10 = self.p10(out_p9)
        out_p11 = self.p11(out_p10)
        out_p12 = self.p12(out_p11)
        out_p13 = self.p13(out_p12)
        out_p14 = self.p14(out_p13)
        out_p15 = self.p15(out_p14)
        out_p16 = self.p16(out_p15)
        out_p17 = self.p17(out_p16)
        out_p18 = self.p18(out_p17)
        out_p19 = self.p19(out_p18)
        out_p20 = self.p20(out_p19)
        out_p21 = self.p21(out_p20)
        out_p22 = self.p22(out_p21)
        out_p23 = self.p23(out_p22)
        out_p24 = self.p24(out_p23)
        out_p25 = self.p25(out_p24)
        out_p26 = self.p26(out_p25)
        out_p27 = self.p27(out_p26)
        out_p28 = self.p28(out_p27)
        out_p29 = self.p29(out_p28)
        out_p30 = self.p30(out_p29)
        out_p31 = self.p31(out_p30)
        out_p32 = self.p32(out_p31)
        body_out = self.c2(out_p32)
        out_lr = body_out + out_fea
        out = self.upsampler(out_lr)
        return out

